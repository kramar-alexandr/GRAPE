procedure AddTemplateTBBULineType(Integer t,Boolean firstf)begin  record TemplateTBBUVc TempTBBUr;  row TemplateTBBUVc TempTBBUrw;  Integer wn,rownr;    wn = CurWindow;  GetWindowRecord(wn,TempTBBUr);    rownr = WindowActiveRow(wn);    DeselectWindow(wn,false);    if (rownr<0) then begin       if (firstf) then begin        rownr = 0;      end else begin        rownr = MatRowCnt(TempTBBUr);      end;    end;    ClearRow(TempTBBUr,TempTBBUrw,t);    TempTBBUrw.Spec = "";    MatRowInsert(TempTBBUr,rownr,TempTBBUrw);    PutWindowRecord(wn,TempTBBUr);    WindowFieldGoto(wn,TempTBBUr,rownr,"Spec",false);  return;end;globalprocedure HeaderLineTemplateTBBUDsm()BEGIN  AddTemplateTBBULineType(17,true);  RETURN;END;globalprocedure SubtotalTemplateTBBUDsm()BEGIN  record TemplateTBBUVc TempTBBUr;  row TemplateTBBUVc TempTBBUrw;  Integer wn,i,rwcnt,rownr;  wn = CurWindow;  if (WindowState(wn)==Rs_normal) then begin    DoUpdate(wn);  end;  if (WindowState(wn)!=Rs_update) then begin    goto LOutSubtotalTBBUDsm;  end;  GetWindowRecord(wn,TempTBBUr);  rwcnt = MatRowCnt(TempTBBUr);  rownr = WindowActiveRow(wn);  if ((rownr==-1) or (rownr>rwcnt)) then begin    rownr = rwcnt;  end;  DeselectWindow(wn,false);   ClearRow(TempTBBUr,TempTBBUrw,9);  MatRowInsert(TempTBBUr,rownr,TempTBBUrw);  PutWindowRecord(wn,TempTBBUr);LOutSubtotalTBBUDsm:;    RETURN;END;global //Edit***************************Sasha2,17:33 08.10.2014 {procedure SubBlockStartTemplateTBBUDsm()BEGIN  record TemplateTBBUVc TempTBBUr;  row TemplateTBBUVc TempTBBUrw;  Integer wn,i,rwcnt,rownr;  wn = CurWindow;  if (WindowState(wn)==Rs_normal) then begin    DoUpdate(wn);  end;  if (WindowState(wn)!=Rs_update) then begin    goto LSubBlockStartTemplateTBBUDsm;  end;  GetWindowRecord(wn,TempTBBUr);  rwcnt = MatRowCnt(TempTBBUr);  rownr = WindowActiveRow(wn);  if ((rownr==-1) or (rownr>rwcnt)) then begin    rownr = rwcnt;  end;  DeselectWindow(wn,false);   ClearRow(TempTBBUr,TempTBBUrw,21);  TempTBBUrw.IdentQuant = -1; // Sasha2: I Use it as a task block sequence number   MatRowInsert(TempTBBUr,rownr,TempTBBUrw);  PutWindowRecord(wn,TempTBBUr);LSubBlockStartTemplateTBBUDsm:;    RETURN;END; //Edit***************************Sasha2,17:33 08.10.2014 }global //Edit***************************Sasha2,17:33 08.10.2014 {procedure SubBlockEndTemplateTBBUDsm()BEGIN  record TemplateTBBUVc TempTBBUr;  row TemplateTBBUVc TempTBBUrw;  Integer wn,i,rwcnt,rownr,checkblockpair;  boolean testf;  Integer blockstartrownr,blockcnt;  string 255 spec;  blockcnt = 0;  checkblockpair = 1;  testf = false;  wn = CurWindow;  GetWindowRecord(wn,TempTBBUr);  rwcnt = MatRowCnt(TempTBBUr);  rownr = WindowActiveRow(wn);  if ((rownr==-1) or (rownr>rwcnt)) then begin    rownr = rwcnt;  end;  DeselectWindow(wn,false);    for (i=(rownr-1);i>=0;i=i-1) begin    MatRowGet(TempTBBUr,i,TempTBBUrw);    if (TempTBBUrw.stp!=9 and (TempTBBUrw.stp<17 or TempTBBUrw.stp>23) and testf==false) then begin    end else begin      if (TempTBBUrw.stp==21) then begin      	checkblockpair = checkblockpair - 1;      	if (TempTBBUrw.IdentQuant==-1) then begin      		blockstartrownr = i;      		testf = true;      		spec = TempTBBUrw.Spec;      	end;      	if (blockcnt<=TempTBBUrw.IdentQuant) then begin      		blockcnt = TempTBBUrw.IdentQuant + 1;      	end;      end;      if (TempTBBUrw.stp==22) then begin      	checkblockpair = checkblockpair + 1;      end;         end;  end;  for (i=(rownr+1);i<rwcnt;i=i+1) begin  	MatRowGet(TempTBBUr,i,TempTBBUrw);  	  if (TempTBBUrw.stp==21) then begin	  	checkblockpair = checkblockpair - 1;	  	if (blockcnt<=TempTBBUrw.IdentQuant) then begin      		blockcnt = TempTBBUrw.IdentQuant + 1;      	end;	  end;	  if (TempTBBUrw.stp==22) then begin	  	checkblockpair = checkblockpair + 1;	  end;  end;    if (checkblockpair!=0 or blockstartrownr>rownr) then begin  	testf = false;  end;    if (testf) then begin    ClearRow(TempTBBUr,TempTBBUrw,22);    if (NonBlank(spec)) then begin		TempTBBUrw.Spec = spec;	end;	MatRowInsert(TempTBBUr,rownr,TempTBBUrw);	MatRowGet(TempTBBUr,blockstartrownr,TempTBBUrw);	TempTBBUrw.IdentQuant = blockcnt;	MatRowPut(TempTBBUr,blockstartrownr,TempTBBUrw); 	PutWindowRecord(wn,TempTBBUr);  end else begin  	MessageBox(31022,"");  end;     RETURN;END; //Edit***************************Sasha2,17:33 08.10.2014 }function Boolean TemplateTBBUDClassArtCodeEFAfter(Integer wn,Integer rownr,Boolean changedf) // Edit by Victor 19.09.14BEGIN  Boolean res;  record TemplateTBBUVc TemplateTBBUr;  row TemplateTBBUVc TemplateTBBUrw;  record INVc INr;  res = true;  if (changedf) then begin    GetWindowRecord(wn,TemplateTBBUr);    	MatRowGet(TemplateTBBUr,rownr,TemplateTBBUrw);  			INr.Code = TemplateTBBUrw.ArtCode;				if(readFirstMain(INr,1,true))then begin					TemplateTBBUrw.Comment = INr.Name;				end;	   	MatRowPut(TemplateTBBUr,rownr,TemplateTBBUrw);    PutWindowRecord(wn,TemplateTBBUr);  end;  TemplateTBBUDClassArtCodeEFAfter = res;  RETURN;END;globalfunction Boolean TemplateTBBUDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed) // Edit by Victor 19.09.14BEGIN  Boolean res;  switch (fieldname) begin    case "ArtCode": res = TemplateTBBUDClassArtCodeEFAfter(wn,rownr,changed!=0);      end;  TemplateTBBUDClassAfterEditField = res;  RETURN;END;