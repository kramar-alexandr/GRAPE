
global
function LongInt TemplateTBBUVcRecordDefaults(var record TemplateTBBUVc TemplateTBBUr,record TemplateTBBUVc TemplateTBBU2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  
  TemplateTBBUr.PRClass = "";
  TemplateTBBUr.Scope = "";

  TemplateTBBUVcRecordDefaults = res; 
  RETURN;
END;

global
function LongInt TemplateTBBUVcRecordDuplicate(var record TemplateTBBUVc TemplateTBBUr,record TemplateTBBUVc TemplateTBBU2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;


  TemplateTBBUVcRecordDuplicate = res; 
  RETURN;
END;

global
function LongInt TemplateTBBUVcRecordCheck(var record TemplateTBBUVc TemplateTBBUr,record TemplateTBBUVc TemplateTBBU2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record PRVc PRr;
  record ProjScopeBlock PSB;
  row ProjScopeBlock PSBrw;
  Integer i,rwcnt,orwcnt;
  boolean found;
  
  record INVc INr;
  record CUVc CUr;
  record SalesGroupVc SalesGroupr;
  row TBBUVc TBBUrw;
  Integer insertmode,updatemode;
  
  string 255 tstr;

  res = 0;
  insertmode = 1;//Rs_insert
  updatemode = 2;//Rs_update
  BlockLoad(PSB);
  
  if (Blank(TemplateTBBUr.PRClass)) then begin
    RecordCheckError(1058,"",-1,"PRClass");      
    res = -1;
    goto LTBBUVcRecordCheck;
  end;
  
  if (Blank(TemplateTBBUr.Scope)) then begin
    RecordCheckError(1058,"",-1,"Scope");      
    res = -1;
    goto LTBBUVcRecordCheck;
  end;
  
  PRr.PRClass = TemplateTBBUr.PRClass;
  if (ReadFirstKey("ActPRClass",PRr,1,true)==false) then begin
    RecordCheckError(1290,"",-1,"PRClass");      
    res = -1;
    goto LTBBUVcRecordCheck;
  end;  
  
  found = false;
  rwcnt = MatRowCnt(PSB);
  for (i=0;i<rwcnt;i=i+1) begin
  	MatRowGet(PSB,i,PSBrw);
  	if (NonBlank(PSBrw.Code)) then begin
  		if (PSBrw.Code==TemplateTBBUr.Scope) then begin
  			found = true;
  			i = rwcnt;
  		end;
  	end;
  end;
  
  if (found==false) then begin
    RecordCheckError(1290,"",-1,"Scope");      
    res = -1;
    goto LTBBUVcRecordCheck;
  end;


  /*rwcnt = MatRowCnt(TBBUr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(TBBUr,i,TBBUrw);
     switch (TBBUrw.stp) begin
       case 1:
         if (nonblank(TBBUrw.ArtCode)) then begin
           INr.Code = TBBUrw.ArtCode;
           if (ReadFirstMain(INr,1,true)==false) then begin
             RecordCheckError(1233,"",i,"ArtCode");      
             res = -1;
             goto LTBBUVcRecordCheck;
           end;
         end else begin
           if (TBBUrw.Qty!=0) then begin
             if (blank(TBBUrw.TimeClass)) then begin
               RecordCheckError(1233,"",i,"ArtCode");      
               res = -1;
               goto LTBBUVcRecordCheck;
             end;
           end;
        end;
        if (nonblank(TBBUrw.PRStageSign)) then begin
          Userr.Code = TBBUrw.PRStageSign;
          if (ReadFirstMain(Userr,1,true)==false) then begin
            RecordCheckError(20170," " & TBBUrw.PRStageSign, i, "PRStageSign");   
            res = -1; 
            goto LTBBUVcRecordCheck;
          end;
        end;        
     end;
  end;*/
LTBBUVcRecordCheck:;
  TemplateTBBUVcRecordCheck = res;
  RETURN;
END;

global
updating function LongInt TemplateTBBUVcRecordSave(var record TemplateTBBUVc TemplateTBBUr,record TemplateTBBUVc TemplateTBBU2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  TemplateTBBUVcRecordSave = res; 
  return;
end;

global
updating function LongInt TemplateTBBUVcRecordUpdate(var record TemplateTBBUVc TemplateTBBUr,record TemplateTBBUVc TemplateTBBU2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  TemplateTBBUVcRecordUpdate = res; 
  return;
end;

global
updating function LongInt TemplateTBBUVcRecordUpdateAfter(var record TemplateTBBUVc TemplateTBBUr,record TemplateTBBUVc TemplateTBBU2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  TemplateTBBUVcRecordUpdateAfter = res; 
  return;
end;

global
function LongInt TemplateTBBUVcRecordRemoveTest(var record TemplateTBBUVc TemplateTBBUr,record TemplateTBBUVc TemplateTBBU2r,LongInt long3,LongInt long4)
begin
  LongInt res;

  res = 1;
  TemplateTBBUVcRecordRemoveTest = res; 
  return;
end;
