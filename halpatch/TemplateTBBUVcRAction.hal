
global
function LongInt TemplateTBBUVcRecordDefaults(var record TemplateTBBUVc TemplateTBBUr,record TemplateTBBUVc TemplateTBBU2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  
  TemplateTBBUr.PRClass = "";
  TemplateTBBUr.Scope = "";

  TemplateTBBUVcRecordDefaults = res; 
  RETURN;
END;

global
function LongInt TemplateTBBUVcRecordDuplicate(var record TemplateTBBUVc TemplateTBBUr,record TemplateTBBUVc TemplateTBBU2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;


  TemplateTBBUVcRecordDuplicate = res; 
  RETURN;
END;

global
function LongInt TemplateTBBUVcRecordCheck(var record TemplateTBBUVc TemplateTBBUr,record TemplateTBBUVc TemplateTBBU2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record PRVc PRr;
  record ProjScopeBlock PSB;
  row ProjScopeBlock PSBrw;
  record PRClassBlock PRB; //Edit***************************Sasha2,9:34 08.10.2014
  row PRClassBlock PRBrw; //Edit***************************Sasha2,9:35 08.10.2014
  Integer i,rwcnt;
  boolean found;
  record INVc INr;
  row TemplateTBBUVc TemplateTBBUrw;
  Integer insertmode,updatemode;
  

  res = 0;
  insertmode = 1;//Rs_insert
  updatemode = 2;//Rs_update
  BlockLoad(PSB);
  BlockLoad(PRB);
  
  if (Blank(TemplateTBBUr.PRClass)) then begin
    RecordCheckError(1058,"",-1,"PRClass");      
    res = -1;
    goto LTBBUVcRecordCheck;
  end;
  
  if (Blank(TemplateTBBUr.Scope)) then begin
    RecordCheckError(1058,"",-1,"Scope");      
    res = -1;
    goto LTBBUVcRecordCheck;
  end;
  
  found = false;
  rwcnt = MatRowCnt(PRB);
  for (i=0;i<rwcnt;i=i+1) begin
  	MatRowGet(PRB,i,PRBrw);
  	if (NonBlank(PRBrw.Code)) then begin
  		if (PRBrw.Code==TemplateTBBUr.PRClass) then begin
  			found = true;
  			i = rwcnt;
  		end;
  	end;
  end;
  
  if (found==false) then begin
  	RecordCheckError(1290,"",-1,"PRClass");      
    res = -1;
    goto LTBBUVcRecordCheck;
  end;
  
  found = false;
  rwcnt = MatRowCnt(PSB);
  for (i=0;i<rwcnt;i=i+1) begin
  	MatRowGet(PSB,i,PSBrw);
  	if (NonBlank(PSBrw.Code)) then begin
  		if (PSBrw.Code==TemplateTBBUr.Scope) then begin
  			found = true;
  			i = rwcnt;
  		end;
  	end;
  end;
  
  if (found==false) then begin
    RecordCheckError(1290,"",-1,"Scope");      
    res = -1;
    goto LTBBUVcRecordCheck;
  end;


  rwcnt = MatRowCnt(TemplateTBBUr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(TemplateTBBUr,i,TemplateTBBUrw);
     switch (TemplateTBBUrw.stp) begin
       case 1:
         if (nonblank(TemplateTBBUrw.ArtCode)) then begin
           INr.Code = TemplateTBBUrw.ArtCode;
           if (ReadFirstMain(INr,1,true)==false) then begin
             RecordCheckError(1233,"",i,"ArtCode");      
             res = -1;
             goto LTBBUVcRecordCheck;
           end;
         end else begin
           if (TemplateTBBUrw.Qty!=0) then begin
               RecordCheckError(1130,"",i,"ArtCode");      
               res = -1;
               goto LTBBUVcRecordCheck;
           end;
        end;      
     end;
  end;
LTBBUVcRecordCheck:;
  TemplateTBBUVcRecordCheck = res;
  RETURN;
END;

global
updating function LongInt TemplateTBBUVcRecordSave(var record TemplateTBBUVc TemplateTBBUr,record TemplateTBBUVc TemplateTBBU2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  TemplateTBBUVcRecordSave = res; 
  return;
end;

global
updating function LongInt TemplateTBBUVcRecordUpdate(var record TemplateTBBUVc TemplateTBBUr,record TemplateTBBUVc TemplateTBBU2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  TemplateTBBUVcRecordUpdate = res; 
  return;
end;

global
updating function LongInt TemplateTBBUVcRecordUpdateAfter(var record TemplateTBBUVc TemplateTBBUr,record TemplateTBBUVc TemplateTBBU2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  TemplateTBBUVcRecordUpdateAfter = res; 
  return;
end;

global
function LongInt TemplateTBBUVcRecordRemoveTest(var record TemplateTBBUVc TemplateTBBUr,record TemplateTBBUVc TemplateTBBU2r,LongInt long3,LongInt long4)
begin
  LongInt res;

  res = 1;
  TemplateTBBUVcRecordRemoveTest = res; 
  return;
end;
