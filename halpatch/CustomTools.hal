external procedure TBBUDchrsum(var record TBBUVc,Integer,Boolean,Integer); // Edit ************************** Thursday, 25 June 2015 10:39:48external procedure TBBUSumup(var record TBBUVc); // Edit ************************** Thursday, 25 June 2015 10:39:49external function boolean AcceptanceTaskCustomer(var record ActVc); //Edit***************************Sasha2,12:35 21.07.2015external updating procedure AcceptanceTaskRecordLink(record ActVc); //Edit***************************Sasha2,12:36 21.07.2015global //Edit***************************Sasha2,10:43 21.07.2015 {updating function Boolean CreateCustomTask(string persons,string fromfilename,string fromsernr,string actcomment)begin  Boolean res;  record ActVc Actr;  record ActTypeVc ActTyper;  string 255 mailboxnr,mailboxname;  Integer pos;  Boolean storef;  record LTxtVc LTxtr;  Integer i,rwcnt;  string 255 tstr;  transaction string 255 gAlarmVcSender;  transaction string 255 gAlarmVcStdTxt;    RecordNew(Actr);  Actr.AlarmType = kAlarmTypeNone;  Actr.AlarmWhen = 0;  Actr.AlarmUnits = 0;  if (NonBlank(persons)) then begin    Actr.MainPersons = persons;  end;  Actr.TodoFlag = kTodoFlagTodo;  Actr.CalTimeFlag = kCalTimeFlagNoshow;  Actr.SymbNr = 3;  Actr.ActType = "";  Actr.ActTypeComment = "";  Actr.Comment = actcomment;  Actr.Comment = Left(Actr.Comment,200);  Actr.FromFileName = fromfilename;  Actr.FromSerNr = fromsernr;  AcceptanceTaskCustomer(Actr);   Actr.SerNr = NextSerNr("ActVc",Actr.TransDate,-1,false,"");  if (Actr.SerNr>0) then begin    if (RecordStore(Actr,false)) then begin      AcceptanceTaskRecordLink(Actr);      res = true;    end;  end;LCreateCustomTask:;    CreateCustomTask = res;  return;end; //Edit***************************Sasha2,10:43 21.07.2015 }global updating procedure PLImportIn()//   Edit-----------------------Dima    20.11.2014  begin  record PLVc PLr;  record PLVc oldPLr;  record PLDefVc PLDefr;  record INVc INr;  string 50 plCode, artCode, price;  real pr;	while (TestEOF()==false) begin		plCode = ImportField;		artCode = ImportField;		price = ImportField;		pr=StringToVal(price,M423Val);		if (nonblank(plCode) and nonblank(artCode) and (pr > 0) ) then begin		PLr.PLCode = plCode;		PLr.ArtCode = artCode;				if (ReadFirstMain(PLr,2,true)) then begin						RecordCopy(oldPLr,PLr);				PLr.ExVatPrice = StringToVal(price,M423Val);				RecordUpdate(oldPLr,PLr,true);			end else begin				PLDefr.Code = plCode;				INr.Code = artCode;				if (ReadFirstMain(PLDefr,1,true)) then begin				 	if (ReadFirstMain(INr,1,true))	then begin						RecordNew(PLr);						PLr.PLCode = plCode;						PLr.ArtCode = artCode;						PLr.ExVatPrice = StringToVal(price,M423Val);						RecordInsert(PLr,true);					end;				end;			end;			end;				if (NextImportLine(true)) then begin end;			end;return;end;global updating procedure ChangeRebateStpMn()//   Edit-----------------------Dima    20.11.2014  begin  record TBBUVc TBBUr;  row TBBUVc TBBUrw;  Integer rwcnt,i;    TBBUr.PRCode = "";  while (LoopMain(TBBUr,1,true)) begin    rwcnt = MatRowCnt(TBBUr);    for (i=0;i<rwcnt;i=i+1) begin      MatRowGet(TBBUr,i,TBBUrw);      if (TBBUrw.stp==23) then begin        TBBUrw.stp = 25;        MatRowPut(TBBUr,i,TBBUrw);      end;    end;    RECORDSTORE(TBBUr,true);  end;return;end;Global Updating Procedure RecalcTBBUMn(record RcVc RepSpec)begin	record TBBUVc TBBUr;	row TBBUVc TBBUrw;	integer i,mtrw;	record GeneralOptionBlock GOb;		BlockLoad(GOb);		while(loopmain(TBBUr,1,true))begin		mtrw = matrowcnt(TBBUr);		For(i=0;i<mtrw;i=i+1) begin			matrowget(TBBUr,i,TBBUrw);	  			if(TBBUrw.stp==1)then begin				if(TBBUrw.Cost!=0)then begin					TBBUrw.SumCost = TBBUrw.Cost * TBBUrw.Qty;				end;				MatRowPut(TBBUr,i,TBBUrw); //Edit***************************Sasha2,10:21 13.10.2014 }        TBBUDchrsum(TBBUr,i,false,GOb.UseDiscount);			end;		end; 		TBBUSumup(TBBUr);		recordstore(TBBUr,true);	end;		return;end;global updating procedure OKAllTBBUMn(record RcVc RepSpec)begin	record TBBUVc TBBUr, oldTBBUr;	row TBBUVc TBBUrw;	integer i,mtrw;		while(loopmain(oldTBBUr,1,true))begin		if(oldTBBUr.OKFlag == 0) then begin			recordCopy(TBBUr, oldTBBUr);					TBBUr.OKFlag = 1;			RecordUpdate(oldTBBUr,TBBUr,true)		end;	end;	   	return;end;