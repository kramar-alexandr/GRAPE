external procedure TBBUSumup(var record TBBUVc);
external procedure TBBUDchrsum(var record TBBUVc,Integer,Boolean,Integer);

SetLangMode(LangRussian,"RUS",0);


global procedure CalculateBudget(var record TBBUVc TBBUr)
begin
	integer i,rwcnt,rwnum,j,rwcnt2,rwcnt3,k,q;
	record PRVc PRr,PR2r;
	record TBBUVc TBBU2r;
	row TBBUVc TBBU2rw;
	row TBBUVc TBBU3rw;
	row PRVc PRrw;
	row TBBUVc TBBUrw;
	boolean testf,TrHs;
	val t,s;
	boolean ident;
	record GeneralOptionBlock GenOptRec;
	record PRClassBlock PRClassRec;
  row PRClassBlock PRClassrw;
  string 100 name;
	
	BlockLoad(GenOptRec);
	BlockLoad(PRClassRec);
	rwcnt3 = MatRowCnt(PRClassRec);
			
	logtext(0,1);
	
  if(TBBUr.OKFlag>0)then begin
  	logtext(0,"“тверждено клиентом!");
  end else begin
		if(MatRowCnt(TBBUr)>0)then begin
			logtext(0, "Ѓюджет не пустой!");
		end else begin		
			PRr.MotherCode = TBBUr.PRCode;
			TrHs = True;
			while(LoopKey("MotherCode",PRr,1,TrHs)) begin
				logtext(0,PRr.Code & " " & PRr.MotherCode);
				testf = true;
				if (PRr.MotherCode!=TBBUr.PRCode)then begin testf = false; TrHs = false;	end;

				if(testf) then begin
					
					TBBU2r.PRCode = PRr.Code;
					if(readfirstmain(TBBU2r,1,true))then begin
						if(MatRowCnt(TBBUr)==0)then begin
							rwcnt = MatRowCnt(TBBU2r);
							name = "";
							if(rwcnt>0)then begin
									
								for (q=0;q<rwcnt3;q=q+1) begin
									MatRowGet(PRClassRec,q,PRClassrw);
									if(PRr.PRClass == PRClassrw.Code)then begin
										name = PRClassrw.Comment;
									end;
								end;
															
								TBBUrw.stp = 18;
								TBBUrw.Spec = TBBU2r.PRName;
								TBBUrw.TypeName = name;
								TBBUrw.IdentQuant = 1;
								MatRowPut(TBBUr,rwnum,TBBUrw);
								rwnum = rwnum + 1;
								for (i=0;i<rwcnt;i=i+1) begin
									MatRowGet(TBBU2r,i,TBBU2rw);
									MatRowPut(TBBUr,rwnum,TBBU2rw);	
									TBBUDchrsum(TBBUr,rwnum,true,GenOptRec.UseDiscount);
									rwnum = rwnum + 1;
								end;
							end;
						end else begin
							rwcnt = MatRowCnt(TBBUr);
							For(i=0;i<rwcnt;i=i+1) begin
	  						matrowget(TBBUr,i,TBBUrw);
	  						if(TBBUrw.stp==18 and TBBUrw.Spec==TBBU2r.PRName)then begin
	  							ident = true;
	  							
	  							rwcnt2 = MatRowCnt(TBBU2r);
	  							if(rwcnt2<=(rwcnt-i-1))then begin
	  								For(j=0;j<rwcnt2;j=j+1) begin
	  									matrowget(TBBU2r,j,TBBU2rw);
	  									matrowget(TBBUr,j+i+1,TBBU3rw);
	  									if(TBBU2rw.stp!=TBBU3rw.stp or TBBU2rw.ArtCode!=TBBU3rw.ArtCode)then begin
	  										ident = false;
	  									end;
										end; 
	  							end else begin
	  								ident = false;
	  							end;
	  							
	  							if(ident)then begin
	  								
	  								TBBUrw.IdentQuant = TBBUrw.IdentQuant + 1; 	
	  								matrowput(TBBUr,i,TBBUrw);						
	  								For(j=0;j<rwcnt2;j=j+1) begin
	  									matrowget(TBBU2r,j,TBBU2rw);
	  									matrowget(TBBUr,j+i+1,TBBU3rw);	 
	  									TBBU3rw.Qty = TBBU3rw.Qty + TBBU2rw.Qty;
	  									matrowput(TBBUr,j+i+1,TBBU3rw);
	  									TBBUDchrsum(TBBUr,j+i+1,true,GenOptRec.UseDiscount);
										end; 
										goto Ldone;
	  							end;
	  						end;
							end; 
							if(!ident)then begin
								rwcnt2 = MatRowCnt(TBBU2r);
								if(rwcnt2>0)then begin
									rwnum = rwcnt;
									clearrow(TBBUr,TBBU3rw,18);
									name = "";
									for (q=0;q<rwcnt3;q=q+1) begin
										MatRowGet(PRClassRec,q,PRClassrw);
										if(PRr.PRClass == PRClassrw.Code)then begin
											name = PRClassrw.Comment;
										end;
									end;
									TBBU3rw.stp = 18;
									TBBU3rw.Spec = TBBU2r.PRName;
									TBBU3rw.TypeName = name;
									TBBU3rw.IdentQuant = 1;
									matrowput(TBBUr,rwnum,TBBU3rw);
									rwnum = rwnum + 1;
									For(i=0;i<rwcnt2;i=i+1) begin
	  								matrowget(TBBU2r,i,TBBU2rw);
	  								MatRowPut(TBBUr,rwnum,TBBU2rw);	
	  								TBBUDchrsum(TBBUr,rwnum,true,GenOptRec.UseDiscount);
	  								rwnum = rwnum + 1;
									end; 
								end;
							end;
						end;
					end;
				end;
Ldone:;
			end;
			TBBUSumup(TBBUr);
		end;
	end;
	logtext(0,matrowcnt(TBBUr));
	return;
end;