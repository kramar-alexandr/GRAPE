external procedure ExtractObj(string,var Integer,var string);

SetLangMode(LangRussian,"RUS",0); 

global updating
function LongInt ADJVcRecordDefaults(var record ADJVc ADJr,record ADJVc ADJ2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
     
  ADJr.SerNr = -1;
  ADJr.TransDate = currentdate;
     
  ADJVcRecordDefaults = res; 
  RETURN;
END;

global
function LongInt ADJVcRecordDuplicate(var record ADJVc ADJr,record ADJVc ADJ2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
	
  ADJr.SerNr = -1;
  ADJr.TransDate = currentdate;
    
  ADJVcRecordDuplicate = res; 
  RETURN;
END;

global
updating function LongInt ADJVcRecordSave(var record ADJVc ADJr,record ADJVc ADJ2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  
  ADJVcRecordSave = res; 
  return;
end;

global
function LongInt ADJVcRecordUpdate(var record ADJVc ADJr,record ADJVc ADJ2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
	

  ADJVcRecordUpdate = res; 
  RETURN;
END;


global
function LongInt ADJVcRecordCheck(var record ADJVc ADJr,record ADJVc ADJ2r,LongInt stat,LongInt long4)
BEGIN 
	LongInt res;
	record CUVc CUr;
	record PRVc PRr;
	record IVVc IVr;
	string 255 serNum, invNum,tmpCust;
	integer insertmode,updatemode, pos, i;
	record SysFormatBlock SysFormatRec;
	record LocalMachineVc LMr;
	record LocationVc Locr;
	record UserVc Userr;
  
  BlockLoad(SysFormatRec);
  res = 0;
  insertmode = 1;
  updatemode = 2;
  invNum = "";
  pos = 0;
  i = 0;
  tmpCust = "";
  
  if(ADJr.SerNr==-1)then begin
  	ADJr.SerNr = NextSerNr("ADJVc",ADJr.TransDate,-1,false,"");
  end;
  
  if (blank(ADJr.SerNr)) then begin
  	RecordCheckError(1058,ADJr.SerNr,-1,"SerNr");      
    res = -1; 
    goto LADJVcRecordCheck;
  end;
 
  if (blank(ADJr.PRCode)) then begin
    RecordCheckError(1058,ADJr.PRCode,-1,"PRCode");      
    res = -1; 
    goto LADJVcRecordCheck;
  end else begin
  	PRr.Code = ADJr.PRCode;
  	if(ReadFirstMain(PRr,1,true)==false) then begin
  		RecordCheckError(1058,ADJr.PRCode,-1,"PRCode");
  		res = -1; 
	    goto LADJVcRecordCheck;
  	end;
  end;
  
  if (blank(ADJr.CustCode)) then begin
    RecordCheckError(1058,ADJr.CustCode,-1,"CustCode");      
    res = -1; 
    goto LADJVcRecordCheck;
  end else begin
  	CUr.Code = ADJr.CustCode;
  	if(ReadFirstMain(CUr,1,true)==false) then begin
  		RecordCheckError(20047,ADJr.CustCode,-1,"CustCode");
  		res = -1; 
	    goto LADJVcRecordCheck;
  	end;
  end;
  
  if (blank(ADJr.ADJNum)) then begin
    RecordCheckError(1058,ADJr.ADJNum,-1,"ADJNum");      
    res = -1; 
    goto LADJVcRecordCheck;
  end;
  
  if (blank(ADJr.TransDate)) then begin
    RecordCheckError(1058,ADJr.TransDate,-1,"TransDate");      
    res = -1; 
    goto LADJVcRecordCheck;
  end;
  
LADJVcRecordCheck:;
  ADJVcRecordCheck = res;
  RETURN;
END;
	
global
updating function LongInt ADJVcRecordSaveAfter(var record ADJVc ADJr,record ADJVc ADJ2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record PRVc PRr;
  PRr.Code = ADJr.PRCode;
  if(readFirstMain(PRr,1,true))then begin
		CreateRecordLink(ADJr,CurrentCompany,PRr,CurrentCompany);
		CreateRecordLink(PRr,CurrentCompany,ADJr,CurrentCompany);
  end;
    
  ADJVcRecordSaveAfter = res;
  RETURN;
END;


/*global
updating function LongInt ADJVcRecordUpdateAfter(var record ADJVc ADJr,record ADJVc ADJ2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
	boolean changes;
  
  changes = false;
     
  ADJVcRecordUpdateAfter = res;
  RETURN;
END;*/


